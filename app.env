DB_DRIVER=postgres
DB_SOURCE=postgresql://root:secret@localhost:5432/simple_bank?sslmode=disable
# เพื่อให้ project นี้ สามารถ connect กับ postgres ที่รันอยู่ใน docker เหมือนกันได้ คุณสามารถรัน docker container inspect postgres12 แล้วเอา ip ของ postgres12 container มาแทน localhost ตรงนี้ได้ จากนั้นก็ rebuild
# DB_SOURCE=postgresql://root:secret@172.17.0.2:5432/simple_bank?sslmode=disable
# หรือรัน: docker run --name simplebank -p 8080:8080 -e GIN_MODE=release -e DB_SOURCE="postgresql://root:secret@172.17.0.2:5432/simple_bank?sslmode=disable" simplebank:latest นั้นก็คือใส่ DB_SOURCE ที่มี ip ของ postgres12 ลงใน run command เลย จะได้ไม่ต้อง rebuild ใหม่ทุกครั้งที่ ip ของ postgres12 container เปลี่ยน

# แต่การ connect โดยใช้ ip address ก็ยุ่งยากอยู่ดี เราเลยจะใช้การกำหนดใน network แทน ซึ่งเราจะทำการสร้าง network แล้วเอาทั้ง 2 container เข้าไปรันใน network เดียวกัน เพื่อให้มัน connect กันได้
# 1. docker network create bank-network
# 2. docker network connect bank-network postgres12
    # ลองรัน docker network inspect bank-network เพื่อตรวจสอบได้
# 3. docker run --name simplebank --network bank-network -p 8080:8080 -e GIN_MODE=release -e DB_SOURCE="postgresql://root:secret@postgres12:5432/simple_bank?sslmode=disable" simplebank:latest
    # นั้นก็คือทำการรัน simplebank project โดยกำหนด --network bank-network หรือก็คือรัน container นี้ใน network ที่กำหนดเลย
    # แล้วก็กำหนด ip ของ db เป็นชื่อของ container ที่รัน db แทน


SERVER_ADDRESS=0.0.0.0:8080
TOKEN_SYMMETRIC_KEY=12345678901234567890123456789012
ACCESS_TOKEN_DURATION=15m